# .github/workflows/build.yml
name: build-appimage
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request: {}

jobs:
  build-ubuntu:
    name: Build on Ubuntu (${{ matrix.os }})
    strategy:
      matrix:
        os:
          - ubuntu-20.04  # GLIBC 2.31 (RHEL 8/9 compat)
          - ubuntu-24.04  # GLIBC 2.38 (newer systems)
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake ninja-build patchelf zsync wget curl \
            qt6-base-dev qt6-declarative-dev qt6-tools-dev \
            qt6-qmltooling-plugins qml6-module-qtquick-controls \
            libgl1-mesa-dev

      - name: Configure & build
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build build -j

      - name: Package AppImage
        env:
          APPIMAGE_EXTRACT_AND_RUN: "1"
        run: |
          chmod +x packaging/make-appimage.sh
          OS_SUFFIX=$(echo ${{ matrix.os }} | sed 's/ubuntu-/u/') \
            ./packaging/make-appimage.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage-${{ matrix.os }}
          path: dist/*.AppImage

  build-rocky9:
    name: Build on Rocky 9 (container)
    runs-on: ubuntu-24.04
    container:
      image: rockylinux:9
    steps:
      - name: Install git (required for checkout)
        run: dnf -y install git

      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          dnf -y install 'dnf-command(config-manager)'
          dnf -y config-manager --set-enabled crb
          dnf -y install epel-release
          dnf -y groupinstall "Development Tools"
          dnf -y install cmake ninja-build patchelf zsync wget curl ca-certificates \
                         qt6-qtbase-devel qt6-qtdeclarative-devel qt6-qttools-devel qt6-qtquickcontrols2-devel \
                         mesa-libGL-devel mesa-libEGL-devel

      - name: Configure & build
        run: |
          cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -G Ninja
          cmake --build build -j

      - name: Package AppImage
        env:
          APPIMAGE_EXTRACT_AND_RUN: "1"
          OS_SUFFIX: "rocky9"
        run: |
          chmod +x packaging/make-appimage.sh
          ./packaging/make-appimage.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: appimage-rocky9
          path: dist/*.AppImage
